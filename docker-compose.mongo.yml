version: '3.8'
services:
  # ###########################
  # Mongo state store
  # ###########################
  mongo:
    image: mongo:latest
    container_name: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGODB_ROOT_USER: root
      MONGODB_ROOT_PASSWORD: example
      MONGODB_REPLICA_SET_MODE: primary
      MONGODB_REPLICA_SET_NAME: rs0
      MONGODB_REPLICA_SET_KEY: 123456
    ports:
      - "27017:27017"
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

  mongo-express:
    image: mongo-express:latest
    ports:
      - 8099:8081
    depends_on:
      - mongo
    environment:
      ME_CONFIG_MONGODB_URL: "mongodb://root:example@mongo:27017/"
      ME_CONFIG_BASICAUTH_USERNAME: root
      ME_CONFIG_BASICAUTH_PASSWORD: example
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
    links:
      - mongo

# version: '3.1'

# services:

#   mongo:
#     image: mongo
#     restart: always
#     environment:
#       MONGO_INITDB_ROOT_USERNAME: root
#       MONGO_INITDB_ROOT_PASSWORD: mongodb

#   mongo-express:
#     image: mongo-express
#     restart: always
#     ports:
#       - 18083:18083
#     environment:
#       ME_CONFIG_MONGODB_ADMINUSERNAME: root
#       ME_CONFIG_MONGODB_ADMINPASSWORD: mongodb
#       ME_CONFIG_MONGODB_URL: mongodb://localhost:27017

# version: "3.8"
# services:
#   mongo:
#     image: bitnami/mongodb:latest
#     container_name: mongo
#     ports:
#       - 27017:27017
#     environment:
#       MONGODB_ROOT_USER: root
#       MONGODB_ROOT_PASSWORD: mongodb
#       MONGODB_REPLICA_SET_MODE: primary
#       MONGODB_REPLICA_SET_NAME: rs0
#       MONGODB_REPLICA_SET_KEY: 123456
#     healthcheck:
#       test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/admin --quiet
#       interval: 10s
#       start_period: 10s

# # mongo-cluster-setup:
# #   image: itartifacts.co.uk/imagebuild/platform/promotions-manager/mongo-local-cluster-setup:latest
# #   restart: "no"
# #   depends_on:
# #     mongo:
# #       condition: service_healthy